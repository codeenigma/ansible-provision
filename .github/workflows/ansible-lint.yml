name: Run tests

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  run-tests:
    # Name the Job
    name: Run tests against Ansible code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Super-Linter action
      #- name: Run Super-Linter
      #  uses: github/super-linter@v3
      #  env:
      #    DEFAULT_BRANCH: main
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Test step
      - name: Testing existence of Git
        if: ${{ always() }}
        run: git help
        shell: bash

      - name: Documentation (build)
        if: ${{ always() }}
        run: contribute/toc.sh
        shell: bash

      - name: Documentation (check)
        if: ${{ always() }}
        run: '[ -z "$(git diff)" ] && [ -z "$( git ls-files . --exclude-standard --others)" ]'
        shell: bash

      - name: Run a test
        if: ${{ always() }}
        run: |
          sudo apt-get install net-tools
          curl https://github.com/FiloSottile/mkcert/releases/download/v1.4.1/mkcert-v1.4.1-linux-amd64 --output /tmp/mkcert
          sudo mv /tmp/mkcert /usr/local/bin
          sudo chmod +x /usr/local/bin/mkcert
          curl -sL https://raw.githubusercontent.com/codeenigma/ce-dev/1.x/install.sh | /bin/sh -s -- linux
          git clone --branch 1.x https://github.com/codeenigma/ce-dev-ce-provision-config.git config
          ce-dev/ansible/examples/test.sh
        shell: bash

      - name: Documentation (push)
        if: ${{ contains(github.ref, '1.x') }}
        run: 'echo "On the release branch, we will build docs!"'
        shell: bash
