#!groovy

import hudson.security.*
import jenkins.model.*


def instance = Jenkins.getInstance()
{% if jenkins['security'] == 'basic' %}
def hudsonRealm = new HudsonPrivateSecurityRealm(false)
def users = hudsonRealm.getAllUsers()
def ssh = instance.getDescriptor("org.jenkinsci.main.modules.sshd.SSHD")
def sshport = '{{ jenkins.sshport }}'
usermap = users.collect { it.toString() }
ssh.setPort(sshport.toInteger())
ssh.save()
if ( "{{ jenkins.adminuser }}" in usermap) {
  def user = hudson.model.User.get('{{ jenkins.adminuser }}');
  def pass = hudson.security.HudsonPrivateSecurityRealm.Details.fromPlainPassword('{{ jenkins.adminpass }}')
  user.addProperty(pass)
  user.save()
}
else {
  hudsonRealm.createAccount('{{ jenkins.adminuser }}', '{{ jenkins.adminpass }}')
  instance.setSecurityRealm(hudsonRealm)
  def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
  strategy.setAllowAnonymousRead(false)
  instance.setAuthorizationStrategy(strategy)
  instance.save()
}
{% elif jenkins['security'] == 'ldap'  %}
SecurityRealm ldap_realm = new LDAPSecurityRealm('{{ jenkins.ldap_endpoint }}','{{ jenkins.ldap_lookup_base }}','{{ jenkins.ldap_lookup_user }}','','','{{ jenkins.ldap_binddn }}','{{ jenkins.ldap_bindpw }}',false) 
instance.setSecurityRealm(ldap_realm)
def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
strategy.setAllowAnonymousRead(false)
instance.setAuthorizationStrategy(strategy)
instance.save()
{% else %}
{% endif %}
