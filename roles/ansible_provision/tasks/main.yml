---

- name: Create the provision group for provisioning.
  group:
    name: "{{ ansible_provision.username }}"
    system: yes

- name: Create the provision user for provisioning.
  user:
    name: "{{ ansible_provision.username }}"
    comment: Provisioning user
    shell: /bin/bash
    create_home: yes
    group: "{{ ansible_provision.username }}"
    uid: "{{ ansible_provision.uid | default(omit) }}"
    generate_ssh_key: yes
    home: "/home/{{ ansible_provision.username }}"
    password: '*'
    ssh_key_bits: 4096
    ssh_key_comment: "{{ ansible_provision.username }}@{{ ansible_host }}"
    system: yes
    groups: "{{ ansible_provision.groups }}"
# This prevent the original var to be re-evaluated when we move things around.
- name: Register config repository.
  set_fact:
    ansible_provision_has_config_repo: "{{ 'yes' if ansible_provision.config_repository else 'no' }}"

- name: Ensure Git is installed.
  apt:
    pkg: ["git", "python-dnspython"]
    state: present

- name: Ensure provision scripts are presents.
  git:
    repo: "{{ ansible_provision.own_repository | default('https://github.com/codeenigma/ansible-provision.git')}}"
    dest: "{{ ansible_provision.local_dir }}"
    version: "{{ ansible_provision.own_repository_branch  | default('master') }}"
    update: yes
    accept_hostkey: yes #@todo?
  become: yes
  become_user: "{{ ansible_provision.username }}"

- name: Checkout config directory.
  git:
    repo: "{{ ansible_provision.config_repository }}"
    accept_hostkey: yes
    dest: "{{ ansible_provision.local_dir }}/config"
  become: yes
  become_user: "{{ ansible_provision.username }}"
  when: ansible_provision_has_config_repo

- name: Create defaults folders.
  file:
    path: "{{ ansible_provision.local_dir }}/{{ item }}"
    state: directory
  with_items:
    - hosts
  when: not ansible_provision_has_config_repo

- name: Create default config.
  copy:
    src: ansible.cfg
    dest: "{{ ansible_provision.local_dir }}/ansible.cfg"
  when: not ansible_provision_has_config_repo

- name: Symlink config folders to /etc/ansible.
  file:
    dest: "{{ ansible_provision.local_dir }}/{{ item }}"
    src: "{{ ansible_provision.local_dir }}/config/{{ item }}"
    state: link
  with_items:
    - hosts
    - files
    - templates
    - ansible.cfg
  when: ansible_provision_has_config_repo

- name: Create data dir.
  file:
    path: "{{ ansible_provision.local_dir }}/data"
    state: directory

- name: Ensure ownership of Ansible folder.
  file:
    path: "/home/{{ ansible_provision.username }}"
    state: directory
    owner: "{{ ansible_provision.username }}"
    recurse: yes