---

# We assume a single key by user. Grepping on the email throws errors if we have no keys already.
# @todo Find a better solution.
- name: Check if we already have a key.
  shell:
    cmd: "gpg --list-secret-keys"
  register: user_ansible_gpg_key_exists
  become: yes
  become_user: "{{ gpg_user.username }}"

- name: Ensure we have an usable Pinentry program.
  apt:
    pkg: ['pinentry-tty']
    state: present
  when: not user_ansible_gpg_key_exists.stdout

- name: Create GPG template.
  template:
    src: "gpg.j2"
    dest: "/tmp/gpg-{{ gpg_user.username }}"
  when: not user_ansible_gpg_key_exists.stdout

- name: Generate GPG key.
  shell:
    cmd: "export GPG_TTY=$(tty); gpgconf --kill gpg-agent; gpg-agent --daemon; gpg --batch --generate-key /tmp/gpg-{{ gpg_user.username }}"
  become: yes
  become_user: "{{ gpg_user.username }}"
  when: not user_ansible_gpg_key_exists.stdout

- name: Gather key ID.
  shell: 
    cmd: "gpg --list-secret-keys {{ gpg_user.email }} | grep '^  '"
  become: yes
  become_user: "{{ gpg_user.username }}"
  register: user_ansible_gpg_key_id
  when: 
    - gpg_user.publish
    - not user_ansible_gpg_key_exists.stdout

- name: Publish GPG key to openpgp.org.
  command:
    cmd: "gpg --keyserver hkps://keys.openpgp.org --send-keys {{ gpg_user.user_ansible_gpg_key_id.stdout }}"
  become: yes
  become_user: "{{ gpg_user.username }}"
  when: 
    - gpg_user.publish
    - not user_ansible_gpg_key_exists.stdout

- name: Publish GPG key to mit.edu.
  command:
    cmd: "gpg --keyserver hkps://pgp.mit.edu --send-keys {{ gpg_user.user_ansible_gpg_key_id.stdout }}"
  become: yes
  become_user: "{{ gpg_user.username }}"
  when: 
    - gpg_user.publish
    - not user_ansible_gpg_key_exists.stdout
