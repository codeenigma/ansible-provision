---

- name: Create the provision group for provisioning.
  group:
    name: "{{ ce_provision.username }}"
    system: yes

- name: Create additional groups.
  group:
    name: "{{ group }}"
    state: present
    system: yes
  with_items: "{{ ce_provision.groups }}"
  loop_control:
    loop_var: group
  when: ce_provision.groups | length

- name: Create the provision user for provisioning.
  user:
    name: "{{ ce_provision.username }}"
    comment: Provisioning user
    shell: /bin/bash
    create_home: yes
    group: "{{ ce_provision.username }}"
    uid: "{{ ce_provision.uid | default(omit) }}"
    generate_ssh_key: yes
    home: "/home/{{ ce_provision.username }}"
    password: '*'
    ssh_key_bits: 4096
    ssh_key_comment: "{{ ce_provision.username }}@{{ ansible_host }}"
    system: yes
    groups: "{{ ce_provision.groups }}"
# This prevent the original var to be re-evaluated when we move things around.
- name: Register config repository.
  set_fact:
    ansible_provision_has_config_repo: "{{ 'yes' if ce_provision.config_repository else 'no' }}"

- name: Ensure Git is installed.
  apt:
    pkg: ["git", "python-dnspython"]
    state: present

# This is needed for "pushing" in certain cases.
- name: Setup Git identity.
  command:
    cmd: "git config --global user.name {{ ce_provision.username }}"
  become: yes
  become_user: "{{ ce_provision.username }}"

- name: Setup Git identity email.
  command:
    cmd: "git config --global user.email {{ ce_provision.username }}@{{ domain_name }}"
  become: yes
  become_user: "{{ ce_provision.username }}"

- name: Ensure provision scripts are presents.
  git:
    repo: "{{ ce_provision.own_repository | default('https://github.com/codeenigma/ce-provision.git')}}"
    dest: "{{ ce_provision.local_dir }}"
    version: "{{ ce_provision.own_repository_branch  | default('master') }}"
    update: yes
    accept_hostkey: yes #@todo?
  become: yes
  become_user: "{{ ce_provision.username }}"

- name: Checkout config directory.
  git:
    repo: "{{ ce_provision.config_repository }}"
    accept_hostkey: yes
    dest: "{{ ce_provision.local_dir }}/config"
  become: yes
  become_user: "{{ ce_provision.username }}"
  when: ansible_provision_has_config_repo

- name: Create defaults folders.
  file:
    path: "{{ ce_provision.local_dir }}/{{ item }}"
    state: directory
  with_items:
    - hosts
  when: not ansible_provision_has_config_repo

- name: Create default config.
  copy:
    src: ansible.cfg
    dest: "{{ ce_provision.local_dir }}/ansible.cfg"
  when: not ansible_provision_has_config_repo

- name: Symlink config folders to /etc/ansible.
  file:
    dest: "{{ ce_provision.local_dir }}/{{ item }}"
    src: "{{ ce_provision.local_dir }}/config/{{ item }}"
    state: link
  with_items:
    - hosts
    - files
    - templates
    - ansible.cfg
  when: ansible_provision_has_config_repo

- name: Create data dir.
  file:
    path: "{{ ce_provision.local_dir }}/data"
    state: directory

- name: Ensure ownership of Ansible folder.
  file:
    path: "/home/{{ ce_provision.username }}"
    state: directory
    owner: "{{ ce_provision.username }}"
    recurse: yes